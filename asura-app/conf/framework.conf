# https://www.playframework.com/documentation/latest/Configuration

play.http.parser.maxMemoryBuffer = 100M
play.http.parser.maxDiskBuffer = 100M
play.i18n.langs = ["zh-CN", "en"]
play.filters.enabled = [
  "play.filters.cors.CORSFilter",
  "play.filters.headers.SecurityHeadersFilter",
]
play.akka.actor-system = "asura-system"
play.filters.headers = {

  # The X-Frame-Options header. If null, the header is not set.
  frameOptions = "DENY"

  # The X-XSS-Protection header. If null, the header is not set.
  xssProtection = "1; mode=block"

  # The X-Content-Type-Options header. If null, the header is not set.
  contentTypeOptions = "nosniff"

  # The X-Permitted-Cross-Domain-Policies header. If null, the header is not set.
  permittedCrossDomainPolicies = "master-only"

  # The Content-Security-Policy header. If null, the header is not set.
  contentSecurityPolicy = null

  # The Referrer-Policy header. If null, the header is not set.
  referrerPolicy = "origin-when-cross-origin, strict-origin-when-cross-origin"

  # If true, allow an action to use .withHeaders to replace one or more of the above headers
  allowActionSpecificHeaders = true
}

play.filters.cors {
  pathPrefixes = ["/"]
  allowedOrigins = null
  allowedHttpMethods = null
  allowedHttpHeaders = null
  serveForbiddenOrigins = true
}

play.modules.enabled += "asura.app.modules.SecurityModule"
play.modules.enabled += "asura.app.modules.ApplicationStartModule"
play.modules.enabled += "com.example.asura.ExampleModule"
play.http.errorHandler = "asura.app.hook.ErrorHandler"
play.http.filters = "asura.app.api.filters.SecurityFilters"

pac4j.security {
  rules = [
    {
      "/api/v1.*" = {
        authorizers = "_anonymous_"
      }
    },
    {
      "/api/v2.*" = {
        authorizers = "_anonymous_"
      }
    },
    {
      "/api/user/login.*" = {
        authorizers = "_authenticated_"
        clients = "DirectFormClient,DirectBasicAuthClient"
      }
    },
    {
      "/api/.*" = {
        authorizers = "_authenticated_"
        clients = "HeaderClient"
      }
    }
  ]
}

akka {
  actor {
    provider = cluster
    default-dispatcher {
      # This will be used if you have set "executor = "fork-join-executor""
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 8

        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        parallelism-factor = 3.0

        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 64

        # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
        # like peeking mode which "pop".
        task-peeking-mode = "LIFO"
      }
    }
  }
  remote {
    artery {
      # change this to enabled=on to use Artery instead of netty
      # see https://doc.akka.io/docs/akka/current/remoting-artery.html
      enabled = on
      transport = aeron-udp
      canonical.hostname = "127.0.0.1"
      canonical.port = 2551
      canonical.port = ${?CLUSTER_PORT}
    }
  }
  cluster {
    seed-nodes = [
      "akka://asura-system@127.0.0.1:2551",
    ]
    # auto downing is NOT safe for production deployments.
    # you may want to use it during development, read more about it in the docs.
    # auto-down-unreachable-after = 10s
  }
  http {
    server.parsing.illegal-header-warnings = off
    client.parsing.illegal-header-warnings = off
    host-connection-pool {
      max-open-requests = 512
    }
  }
}

# Enable metrics extension in akka-cluster-metrics.
akka.extensions = ["akka.cluster.metrics.ClusterMetricsExtension"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
akka.cluster.metrics.native-library-extract-folder = ${user.dir}/target/native

contexts {
  node-watcher {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 10
    }
  }

  expensive-cpu-operations {
    fork-join-executor {
      parallelism-max = 2
    }
  }
}
